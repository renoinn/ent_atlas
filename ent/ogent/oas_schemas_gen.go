// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"github.com/go-faster/jx"
)

type CreateUsersReq struct {
	Name         string `json:"name"`
	Email        string `json:"email"`
	Introduction string `json:"introduction"`
}

// GetName returns the value of Name.
func (s CreateUsersReq) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s CreateUsersReq) GetEmail() string {
	return s.Email
}

// GetIntroduction returns the value of Introduction.
func (s CreateUsersReq) GetIntroduction() string {
	return s.Introduction
}

// SetName sets the value of Name.
func (s *CreateUsersReq) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *CreateUsersReq) SetEmail(val string) {
	s.Email = val
}

// SetIntroduction sets the value of Introduction.
func (s *CreateUsersReq) SetIntroduction(val string) {
	s.Introduction = val
}

// DeleteUsersNoContent is response for DeleteUsers operation.
type DeleteUsersNoContent struct{}

func (*DeleteUsersNoContent) deleteUsersRes() {}

type ListUsersOKApplicationJSON []UsersList

func (ListUsersOKApplicationJSON) listUsersRes() {}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type R400 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s R400) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s R400) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s R400) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R400) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R400) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R400) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R400) createUsersRes() {}
func (*R400) deleteUsersRes() {}
func (*R400) listUsersRes()   {}
func (*R400) readUsersRes()   {}
func (*R400) updateUsersRes() {}

type R404 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s R404) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s R404) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s R404) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R404) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R404) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R404) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R404) deleteUsersRes() {}
func (*R404) listUsersRes()   {}
func (*R404) readUsersRes()   {}
func (*R404) updateUsersRes() {}

type R409 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s R409) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s R409) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s R409) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R409) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R409) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R409) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R409) createUsersRes() {}
func (*R409) deleteUsersRes() {}
func (*R409) listUsersRes()   {}
func (*R409) readUsersRes()   {}
func (*R409) updateUsersRes() {}

type R500 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s R500) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s R500) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s R500) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R500) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R500) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R500) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R500) createUsersRes() {}
func (*R500) deleteUsersRes() {}
func (*R500) listUsersRes()   {}
func (*R500) readUsersRes()   {}
func (*R500) updateUsersRes() {}

type UpdateUsersReq struct {
	Name         OptString `json:"name"`
	Email        OptString `json:"email"`
	Introduction OptString `json:"introduction"`
}

// GetName returns the value of Name.
func (s UpdateUsersReq) GetName() OptString {
	return s.Name
}

// GetEmail returns the value of Email.
func (s UpdateUsersReq) GetEmail() OptString {
	return s.Email
}

// GetIntroduction returns the value of Introduction.
func (s UpdateUsersReq) GetIntroduction() OptString {
	return s.Introduction
}

// SetName sets the value of Name.
func (s *UpdateUsersReq) SetName(val OptString) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *UpdateUsersReq) SetEmail(val OptString) {
	s.Email = val
}

// SetIntroduction sets the value of Introduction.
func (s *UpdateUsersReq) SetIntroduction(val OptString) {
	s.Introduction = val
}

// Ref: #/components/schemas/UsersCreate
type UsersCreate struct {
	ID           int    `json:"id"`
	Name         string `json:"name"`
	Email        string `json:"email"`
	Introduction string `json:"introduction"`
}

// GetID returns the value of ID.
func (s UsersCreate) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s UsersCreate) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s UsersCreate) GetEmail() string {
	return s.Email
}

// GetIntroduction returns the value of Introduction.
func (s UsersCreate) GetIntroduction() string {
	return s.Introduction
}

// SetID sets the value of ID.
func (s *UsersCreate) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UsersCreate) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *UsersCreate) SetEmail(val string) {
	s.Email = val
}

// SetIntroduction sets the value of Introduction.
func (s *UsersCreate) SetIntroduction(val string) {
	s.Introduction = val
}

func (*UsersCreate) createUsersRes() {}

// Ref: #/components/schemas/UsersList
type UsersList struct {
	ID           int    `json:"id"`
	Name         string `json:"name"`
	Email        string `json:"email"`
	Introduction string `json:"introduction"`
}

// GetID returns the value of ID.
func (s UsersList) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s UsersList) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s UsersList) GetEmail() string {
	return s.Email
}

// GetIntroduction returns the value of Introduction.
func (s UsersList) GetIntroduction() string {
	return s.Introduction
}

// SetID sets the value of ID.
func (s *UsersList) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UsersList) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *UsersList) SetEmail(val string) {
	s.Email = val
}

// SetIntroduction sets the value of Introduction.
func (s *UsersList) SetIntroduction(val string) {
	s.Introduction = val
}

// Ref: #/components/schemas/UsersRead
type UsersRead struct {
	ID           int    `json:"id"`
	Name         string `json:"name"`
	Email        string `json:"email"`
	Introduction string `json:"introduction"`
}

// GetID returns the value of ID.
func (s UsersRead) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s UsersRead) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s UsersRead) GetEmail() string {
	return s.Email
}

// GetIntroduction returns the value of Introduction.
func (s UsersRead) GetIntroduction() string {
	return s.Introduction
}

// SetID sets the value of ID.
func (s *UsersRead) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UsersRead) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *UsersRead) SetEmail(val string) {
	s.Email = val
}

// SetIntroduction sets the value of Introduction.
func (s *UsersRead) SetIntroduction(val string) {
	s.Introduction = val
}

func (*UsersRead) readUsersRes() {}

// Ref: #/components/schemas/UsersUpdate
type UsersUpdate struct {
	ID           int    `json:"id"`
	Name         string `json:"name"`
	Email        string `json:"email"`
	Introduction string `json:"introduction"`
}

// GetID returns the value of ID.
func (s UsersUpdate) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s UsersUpdate) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s UsersUpdate) GetEmail() string {
	return s.Email
}

// GetIntroduction returns the value of Introduction.
func (s UsersUpdate) GetIntroduction() string {
	return s.Introduction
}

// SetID sets the value of ID.
func (s *UsersUpdate) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UsersUpdate) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *UsersUpdate) SetEmail(val string) {
	s.Email = val
}

// SetIntroduction sets the value of Introduction.
func (s *UsersUpdate) SetIntroduction(val string) {
	s.Introduction = val
}

func (*UsersUpdate) updateUsersRes() {}
